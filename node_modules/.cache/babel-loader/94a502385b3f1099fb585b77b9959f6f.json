{"remainingRequest":"/home/hayyuu/Gebeta/Gebeta-Restaurant/node_modules/babel-loader/lib/index.js!/home/hayyuu/Gebeta/Gebeta-Restaurant/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/hayyuu/Gebeta/Gebeta-Restaurant/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/hayyuu/Gebeta/Gebeta-Restaurant/src/views/Menu.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/hayyuu/Gebeta/Gebeta-Restaurant/src/views/Menu.vue","mtime":1630218053242},{"path":"/home/hayyuu/Gebeta/Gebeta-Restaurant/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hayyuu/Gebeta/Gebeta-Restaurant/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/hayyuu/Gebeta/Gebeta-Restaurant/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hayyuu/Gebeta/Gebeta-Restaurant/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js","mtime":1628298225000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/hayyuu/Gebeta/Gebeta-Restaurant/src/views/Menu.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <Header title=\"Restaurant Menu\" />\n    <Button \n        @click=\"toggleItem\" \n        :text=\"showAddItem ? 'Close X' : 'Add Item' \" \n        :color=\"showAddItem ? '#914d3c' : '#4b423f' \"\n        style=\"padding: 5px 20px; margin-bottom: 15px\"/>\n  <AddItem @add-item=\"addItem\" v-if=\"showAddItem\" \n    @add-notification=\"addNotification\" :itm=\"itm\" :update=\"update\"/>\n  <Items @delete-item=\"del\"\n         @delete-img=\"deleteImg\"\n         @toggle-avaliablity=\"toggleR\" \n         @edit-item=\"editItem\"\n         :items=\"items\" />\n    <div v-if=\"items.length===0\" class=\"container\" style=\"width:800px\">\n        <h1>There are no items in your menu. Please Add items!</h1>\n        <img src=\"../assets/empty.png\" />\n    </div>\n    <transition name=\"fade\" appear>\n        <div class=\"modal-overlay\" v-if=\"showModal\"></div>\n    </transition>\n    <transition name=\"slide\" appear>\n        <div class=\"modal\" v-if=\"showModal\">\n            <h1>Are you sure?</h1>\n            <p>Deleting Item</p>\n            <div class=\"buttons\">\n                <button @click=\"deleteItem\">Yes</button>\n                <button @click=\"showModal = false\">No</button>\n            </div>\n        </div>\n    </transition>\n    <NotificationList :notifications=\"notifications\" \n        @remove-notification=\"removeNotification\"/>\n</template>\n\n<script>\nimport store from '../store'\nimport Header from '../components/Header'\nimport Button from '../components/Button'\nimport Items from '../components/Items'\nimport AddItem from '../components/AddItem'\nimport NotificationList from '../components/NotificationList' \n\nimport axios from 'axios'\n\nexport default{\n    name: 'Menu',\n    components: {\n        Header,\n        Button,\n        Items,\n        AddItem,\n        NotificationList,\n    },\n    data() {\n        return{\n            items: [],\n            notifications: [],\n            showModal: false,\n            itm: [],\n            delId: '',\n            showAddItem: false,\n            update: false,\n            token: ''\n        }\n    },\n    methods: {\n        async deleteItem(){\n            const res =  await fetch(`api/items/${this.delId}`, {\n                method: 'DELETE',\n                headers: this.getHeader(),\n            })\n            const data = await res.json()\n            if(res.status === 200){\n                this.items = this.items.filter((item) => item._id !== this.delId)\n                this.addNotification({id: this.delId, message: data.message,type: 'success'})\n            } else{\n                this.addNotification({id: 7,message: 'Error deleting item',type: 'success'})\n            }\n            this.showModal = false\n        },\n        async toggleR(id){\n            const itemToToggle = await this.fetchItem(id)\n            const updItem = {...itemToToggle, isServed: !itemToToggle.isServed}\n\n            const res = await fetch(`api/items/${id}`,{\n                method: 'PUT',\n                headers: this.getHeader(),\n                body: JSON.stringify(updItem)\n            })\n\n            const data = await res.json()\n            if(data && data.isServed){this.addNotification({id: data._id,message: data.foodName + ' is now avaliable', type: 'success'})}\n            this.items = this.items.map((item)  => item._id === id ? {...item, isServed: data.isServed} : item)\n        },\n        async addItem(formData, newItem){\n            if(!this.update){\n                const res = await fetch('api/items', {\n                    method: 'POST',\n                    headers: this.getHeader(),\n                    body: JSON.stringify(newItem)\n                })\n\n                const data = await res.json()\n                if(res.status === 200){\n                    this.addImages(formData, data)\n                    this.addNotification({id: data._id,message: 'Item '+ data.foodName +' Added!',type: 'success'})\n                }else{\n                    this.addNotification({id: data._id,message: data.message,type: 'dismissible'})\n                }\n            }else{this.updateItem(formData, newItem)}\n        },\n        async updateItem(formData, newItem){\n             const res = await fetch(`api/items/${this.itm._id}`,{\n                method: 'PUT',\n                headers: this.getHeader(),\n                body: JSON.stringify(newItem)\n            })  \n            \n            const data = await res.json()\n            if(res.status === 200){ \n                if(formData){\n                    this.addImages(formData,data)\n                }else{this.items = this.items.map((item)  => item._id === data._id ? item = data : item )}\n                this.addNotification({id: data._id,message: 'Item '+ data.foodName +' Updated!',type: 'success'})\n            }else{\n                this.addNotification({id: data._id,message: data.message,type: 'dismissible'})\n            }\n        },\n        editItem(id){\n            var editData = this.items.find((item)  => item._id === id)\n            this.itm = editData\n            store.commit('toggleUpdate')\n            this.showAddItem = store.showAddItem\n            this.update = store.update\n            window.scrollTo(0,120);\n        },\n        async addImages(formData,data){\n            try {\n                var isNewItem = this.update ? false : true\n                formData.append(\"itemId\", data._id)\n                formData.append(\"isNewItem\",isNewItem)\n                const res = await axios.post('api/images/upload',formData, {headers: this.getHeader()}).then((result) => {return result;})\n                this.addNotification({id: 101,message: res.data.message,type: 'success'})\n                if(this.update){\n                    this.items = this.items.map((item)  => item._id === data._id ? item = data : item )\n                }else{this.items = [...this.items, data]}\n            } catch(err){\n                this.addNotification({id: 101,message: err,type: 'dismissible'})\n            }\n        },\n        async deleteImg(id, img){\n            const res = await fetch(`api/images/${id}`,{\n                method: 'PUT',\n                headers: this.getHeader(),\n                body: JSON.stringify({img: img})\n            })  \n\n            const data = await res.json()\n            if(res.status === 200){\n                this.items = this.items.map((item)  => item._id === id ? item = data : item )\n                this.addNotification({id: data._id,message: 'Image '+ img +' Deleted!',type: 'success'})\n            }\n        },\n        async fetchItems(){\n            const id = JSON.parse(localStorage.getItem('id'))\n            const res = await fetch(`api/items/menu/${id}`,{headers: this.getHeader()})\n            const data = await res.json()\n            return data\n        },\n        async fetchItem(id){\n            const res = await fetch(`api/items/${id}`,{headers: this.getHeader()})\n            const data = await res.json()\n            return data\n        },\n        del(id){ \n            this.showModal = true \n            this.delId = id\n        },\n        getHeader(){\n            const token = JSON.parse(localStorage.getItem('token'))\n            return {'Content-type': 'application/json', 'Authorization': ' Bearer ' + token}\n        },\n        addNotification(notif){\n            this.notifications.push(notif)\n        },\n        removeNotification(id){\n            this.notifications = this.notifications.filter((notif) => notif.id !== id)\n        },\n        toggleItem(){\n            store.commit('toggleItem')\n            this.update = false\n            this.showAddItem = store.showAddItem\n        }\n    },\n    async created(){\n        this.items = await this.fetchItems()\n        if(!this.items){this.items=[]}\n    }\n}\n</script>\n\n<style>\n.modal-overlay{\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    z-index: 98;\n    background-color: rgba(0, 0, 0, 0.3);\n}\n\n.modal{\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%,-50%);\n    text-align: center;\n    z-index: 98;\n    width: 100%;\n    max-width: 400px;\n    background-color: rgb(243, 228, 225);\n    border-radius: 16px; \n    padding: 25px;\n}\n\n.modal h1{\n    color: rgba(148, 37, 37, 0.884);\n}\n\nbutton{\n    appearance: none;\n    outline: none;\n    border: none;\n    background: none;\n    cursor: pointer;\n    \n    display: inline-block;\n    padding: 5px 20px;\n    background-image: linear-gradient(to right, #a33e3e, #e95f5f);\n    border-radius: 10px;\n    \n    color: #FFF;\n    font-size: 18px;\n    font-weight: 700;\n    \n    box-shadow: 3px 3px rgba(54, 52, 52, 0.4);\n    transition: 0.4s ease-out;\n}\n\n.modal button{\n    margin-right: 20px;\n}\n\nbutton:hover {\n    box-shadow: 1px 1px rgba(87, 81, 81, 0.6);\n}\n\n.fade-leave-active{\n    transition: opacity .5s;\n}\n\n.fade-leave-to {\n    opacity: 0;\n}\n\n.slide-leave-active {\n    transition: transform .2s;\n}\n</style>\n"],"sourceRoot":""}]}